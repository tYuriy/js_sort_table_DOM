{"version":3,"sources":["scripts/main.js"],"names":["headTable","document","querySelector","bodyTable","headers","Array","from","firstElementChild","children","arrayOfRows","rows","addEventListener","e","targetElement","target","orderByColumnIndex","indexOf","orderByColumnName","innerText","toLowerCase","append","sortItems","items","orderBy","index","sort","a","b","sortString","sortNumber","prevRow","actualRow","prevText","actText","localeCompare","prevNumber","replace"],"mappings":";AAAA,aA4CC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA1CD,IAAMA,EAAYC,SAASC,cAAc,SACnCC,EAAYF,SAASC,cAAc,SAEnCE,EAAUC,MAAMC,KAAKN,EAAUO,kBAAkBC,UACjDC,EAAkBN,EAAAA,EAAUO,MAElCV,EAAUW,iBAAiB,QAAS,SAAAC,GAC5BC,IAAAA,EAAgBD,EAAEE,OAClBC,EAAqBX,EAAQY,QAAQH,GACrCI,EAAoBJ,EAAcK,UAAUC,cAElDhB,EAAUiB,OAAVjB,MAAAA,EACKkB,EAAAA,EAAUZ,EAAaQ,EAAmBF,OAGjD,IAAMM,EAAY,SAACC,EAAOC,EAASC,GACzBD,OAAAA,GACD,IAAA,OACA,IAAA,WACID,OAAAA,EAAMG,KAAK,SAACC,EAAGC,GACpBC,OAAAA,EAAWF,EAAGC,EAAGH,KAEhB,IAAA,MACA,IAAA,SACIF,OAAAA,EAAMG,KAAK,SAACC,EAAGC,GACpBE,OAAAA,EAAWH,EAAGC,EAAGH,OAKzB,SAASI,EAAWE,EAASC,EAAWP,GAChCQ,IAAAA,EAAWF,EAAQtB,SAASgB,GAAON,UACnCe,EAAUF,EAAUvB,SAASgB,GAAON,UAEnCc,OAAAA,EAASE,cAAcD,GAGhC,SAASJ,EAAWC,EAASC,EAAWP,GAI/BW,OAHaL,EAAQtB,SAASgB,GAAON,UAAUkB,QAAQ,MAAO,KAClDL,EAAUvB,SAASgB,GAAON,UAAUkB,QAAQ,MAAO","file":"main.a8c32a64.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst headTable = document.querySelector('thead');\nconst bodyTable = document.querySelector('tbody');\n\nconst headers = Array.from(headTable.firstElementChild.children);\nconst arrayOfRows = [...bodyTable.rows];\n\nheadTable.addEventListener('click', e => {\n  const targetElement = e.target;\n  const orderByColumnIndex = headers.indexOf(targetElement);\n  const orderByColumnName = targetElement.innerText.toLowerCase();\n\n  bodyTable.append(\n    ...sortItems(arrayOfRows, orderByColumnName, orderByColumnIndex));\n});\n\nconst sortItems = (items, orderBy, index) => {\n  switch (orderBy) {\n    case 'name':\n    case 'position':\n      return items.sort((a, b) =>\n        sortString(a, b, index)\n      );\n    case 'age':\n    case 'salary':\n      return items.sort((a, b) =>\n        sortNumber(a, b, index)\n      );\n  }\n};\n\nfunction sortString(prevRow, actualRow, index) {\n  const prevText = prevRow.children[index].innerText;\n  const actText = actualRow.children[index].innerText;\n\n  return prevText.localeCompare(actText);\n}\n\nfunction sortNumber(prevRow, actualRow, index) {\n  const prevNumber = +prevRow.children[index].innerText.replace(/\\D/g, '');\n  const actNumber = +actualRow.children[index].innerText.replace(/\\D/g, '');\n\n  return prevNumber - actNumber;\n}\n"]}